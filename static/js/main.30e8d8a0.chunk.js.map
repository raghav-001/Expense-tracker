{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","ExpensesList","items","length","map","expense","ExpensesFilter","selected","onDropdownChange","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30e8d8a0.chunk.js","sourcesContent":["import \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault(); //Prevent from webpage to refresh when form is submitted\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData); //Calling function in NewExpense component to pass the object\r\n    setEnteredTitle(\"\"); //Re-initialize to null string- Two way binding\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount} //For overriding the input value to null string after submission\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData); //Call the function in App.js (bottom up communication continued)\r\n    setIsEditing(false); // To close form after submission\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    // Pass onSaveExpenseData which points to function, as parameter to the child\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}></ExpenseForm>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\nexport default Card;","import ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\nimport Card from \"../UI/Card\";\r\nfunction ExpenseItem(props) { //Stateless component\r\n  return (\r\n    <li>\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price \">{props.amount}</div>\r\n      </div>\r\n    </Card>\r\n    </li>\r\n  );\r\n}\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id} // Have unique ID for items in array\r\n          title={expense.title} //Mapping expenses array objects to the ExpenseItem component for dynamic display\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onDropdownChange(event.target.value); //Calling parent function(in Expenses) to pass parameter\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import ExpensesList from \"./ExpensesList\";\r\nimport ExpenseFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport { useState } from \"react\";\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear); // Two way binding\r\n  };\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear; //Creates a new array with a given filter\r\n  });\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          selected={filteredYear} // Set default value as 2021 and pass as prop to child\r\n          onDropdownChange={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n        <ExpensesList items={filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default Expenses;\r\n","import { useState } from \"react\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport './Title.css';\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    }); \n    /*Add the new expense on top, spread operator to add previous expenses back to the array. \n    The parameter passed in state updating function automatically gets previous snapshot of the state*/\n  };\n  return (\n    <div>\n      <h2 className=\"title\">EXPENSE TRACKER</h2>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}