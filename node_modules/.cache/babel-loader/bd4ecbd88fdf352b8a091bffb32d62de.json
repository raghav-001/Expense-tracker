{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raghav\\\\expensetracker\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpenseFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear); // Two way binding\n  };\n\n  const filteredExpenses = props.expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear; //Creates a new array with a given filter\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selected: filteredYear // Set default value as 2021 and pass as prop to child\n        ,\n        onDropdownChange: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 43\n      }, this)\n      /* If first condition is true second condition can be displayed in output */\n      , filteredExpenses.length > 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        // Have unique ID for items in array\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"mdIsaHWtxuZbTDv6nUGN/ApvXr0=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/Raghav/expensetracker/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","ExpenseFilter","Card","useState","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","expenses","filter","expense","date","getFullYear","toString","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMK,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf,CAD4C,CACb;AAChC,GAFD;;AAGA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAuBC,OAAD,IAAa;AAC1D,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD,CAD0D,CACK;AAChE,GAFwB,CAAzB;AAGA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,QAAQ,EAAEA,YADZ,CAC0B;AAD1B;AAEE,QAAA,gBAAgB,EAAEE;AAFpB;AAAA;AAAA;AAAA;AAAA,cADF,EAMGE,gBAAgB,CAACO,MAAjB,KAA4B,CAA5B,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyB;AAN7D,QAOGP,gBAAgB,CAACO,MAAjB,GAA0B,CAA1B,IACCP,gBAAgB,CAACQ,GAAjB,CAAsBL,OAAD,iBACnB,QAAC,WAAD;AACmB;AACjB,QAAA,KAAK,EAAEA,OAAO,CAACM,KAFjB;AAGE,QAAA,MAAM,EAAEN,OAAO,CAACO,MAHlB;AAIE,QAAA,IAAI,EAAEP,OAAO,CAACC;AAJhB,SACOD,OAAO,CAACQ,EADf;AAAA;AAAA;AAAA;AAAA,cADF,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA/BQjB,Q;;KAAAA,Q;AAgCT,eAAeA,QAAf","sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport ExpenseFilter from \"./ExpensesFilter\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport { useState } from \"react\";\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear); // Two way binding\r\n  };\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear; //Creates a new array with a given filter\r\n  });\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          selected={filteredYear} // Set default value as 2021 and pass as prop to child\r\n          onDropdownChange={filterChangeHandler}\r\n        />\r\n\r\n        {filteredExpenses.length === 0 && <p>No expenses found</p> /* If first condition is true second condition can be displayed in output */} \r\n        {filteredExpenses.length > 0 &&\r\n          filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id} // Have unique ID for items in array\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))}\r\n\r\n        {/*Mapping expenses array objects to the ExpenseItem component for dynamic display */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}