{"ast":null,"code":"import _slicedToArray from\"C:/Users/Raghav/expensetracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./ExpenseForm.css\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExpenseForm=function ExpenseForm(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),enteredTitle=_useState2[0],setEnteredTitle=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),enteredAmount=_useState4[0],setEnteredAmount=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),enteredDate=_useState6[0],setEnteredDate=_useState6[1];var titleChangeHandler=function titleChangeHandler(event){setEnteredTitle(event.target.value);};var amountChangeHandler=function amountChangeHandler(event){setEnteredAmount(event.target.value);};var dateChangeHandler=function dateChangeHandler(event){setEnteredDate(event.target.value);};var submitHandler=function submitHandler(event){event.preventDefault();//Prevent from webpage to refresh when form is submitted\nvar expenseData={title:enteredTitle,amount:+enteredAmount,date:new Date(enteredDate)};props.onSaveExpenseData(expenseData);//Calling function in NewExpense component to pass the object\nsetEnteredTitle(\"\");//Re-initialize to null string- Two way binding\nsetEnteredAmount(\"\");setEnteredDate(\"\");};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:enteredTitle,onChange:titleChangeHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0.01\",step:\"0.01\",value:enteredAmount//For overriding the input value to null string after submission\n,onChange:amountChangeHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",min:\"2019-01-01\",max:\"2022-12-31\",value:enteredDate,onChange:dateChangeHandler})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add expense\"})]})]});};export default ExpenseForm;","map":{"version":3,"sources":["C:/Users/Raghav/expensetracker/src/components/NewExpense/ExpenseForm.js"],"names":["useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","onCancel"],"mappings":"iHAAA,MAAO,mBAAP,CACA,OAASA,QAAT,KAAyB,OAAzB,C,wFACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,cAAwCF,QAAQ,CAAC,EAAD,CAAhD,wCAAOG,YAAP,eAAqBC,eAArB,eACA,eAA0CJ,QAAQ,CAAC,EAAD,CAAlD,yCAAOK,aAAP,eAAsBC,gBAAtB,eACA,eAAsCN,QAAQ,CAAC,EAAD,CAA9C,yCAAOO,WAAP,eAAoBC,cAApB,eACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CACpCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CACD,CAFD,CAGA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACH,KAAD,CAAW,CACrCJ,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB,CACD,CAFD,CAGA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACJ,KAAD,CAAW,CACnCF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CACD,CAFD,CAGA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,KAAD,CAAW,CAC/BA,KAAK,CAACM,cAAN,GAAwB;AACxB,GAAMC,CAAAA,WAAW,CAAG,CAClBC,KAAK,CAAEf,YADW,CAElBgB,MAAM,CAAE,CAACd,aAFS,CAGlBe,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAASd,WAAT,CAHY,CAApB,CAKAL,KAAK,CAACoB,iBAAN,CAAwBL,WAAxB,EAAsC;AACtCb,eAAe,CAAC,EAAD,CAAf,CAAqB;AACrBE,gBAAgB,CAAC,EAAD,CAAhB,CACAE,cAAc,CAAC,EAAD,CAAd,CACD,CAXD,CAaA,mBACE,cAAM,QAAQ,CAAEO,aAAhB,wBACE,aAAK,SAAS,CAAC,uBAAf,wBACE,aAAK,SAAS,CAAC,sBAAf,wBACE,gCADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEZ,YAFT,CAGE,QAAQ,CAAEM,kBAHZ,EAFF,GADF,cASE,aAAK,SAAS,CAAC,sBAAf,wBACE,iCADF,cAEE,cACE,IAAI,CAAC,QADP,CAEE,GAAG,CAAC,MAFN,CAGE,IAAI,CAAC,MAHP,CAIE,KAAK,CAAEJ,aAAe;AAJxB,CAKE,QAAQ,CAAEQ,mBALZ,EAFF,GATF,cAmBE,aAAK,SAAS,CAAC,sBAAf,wBACE,+BADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,GAAG,CAAC,YAFN,CAGE,GAAG,CAAC,YAHN,CAIE,KAAK,CAAEN,WAJT,CAKE,QAAQ,CAAEO,iBALZ,EAFF,GAnBF,GADF,cA+BE,aAAK,SAAS,CAAC,sBAAf,wBACE,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEZ,KAAK,CAACqB,QAArC,oBADF,cAEE,eAAQ,IAAI,CAAC,QAAb,yBAFF,GA/BF,GADF,CAsCD,CAhED,CAiEA,cAAetB,CAAAA,WAAf","sourcesContent":["import \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault(); //Prevent from webpage to refresh when form is submitted\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData); //Calling function in NewExpense component to pass the object\r\n    setEnteredTitle(\"\"); //Re-initialize to null string- Two way binding\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount} //For overriding the input value to null string after submission\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}